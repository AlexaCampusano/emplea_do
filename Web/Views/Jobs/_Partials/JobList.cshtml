@using Web.Framework.Helpers
@using Web.Framework.Extensions
@model IEnumerable<Domain.Job>
@if (Model != null && Model.Any())
{
    <div class="jobs">
        @foreach (var jobOpportunity in Model)
        {
            var jobId = string.Empty.SeoUrl(jobOpportunity.Id, jobOpportunity.Title);
            <div class="featured">
                <a href="@Url.Action("Detail", "Jobs" , new { id=string.Empty.SeoUrl(jobOpportunity.Id, jobOpportunity.Title) })">
                    <div class="row">
                        <div class="col-md-1 hidden-sm hidden-xs text-center">
                            @if (!string.IsNullOrEmpty(jobOpportunity.Company.LogoUrl))
                            {
                                <img src="@jobOpportunity.Company.LogoUrl"
                                     width="60"
                                     height="60"
                                     alt=""
                                     class="img-responsive"
                                     onclick="onJobOpportunityDetailClick(this);"
                                     data-url="@Url.Action("Detail", "Jobs" , new { id=jobId })" />
                            }
                            else
                            {
                                <h5 class="company-text-logo !important">@Html.FirstTwoLetters(jobOpportunity.Company.Name)</h5>
                            }
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-7 col-xs-12 job-title">
                            <h5>@jobOpportunity.Title</h5>
                            <p><strong>@jobOpportunity.Company.Name</strong> | @jobOpportunity.Company.Email</p>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12 job-location">
                            <p>
                                @if (jobOpportunity.Location == null)
                                {
                                    <strong>N/A</strong>
                                }
                                else
                                {
                                    <strong>@jobOpportunity.Location.Name</strong>
                                }
                            </p>
                            <p>@jobOpportunity.CreatedAt.ToDominicanFormat()</p>
                        </div>
                        <div class="pull-left col-lg-2 col-md-2 hidden-sm hidden-xs job-type text-center">
                            @if (jobOpportunity.IsRemote)
                            {
                                <p class="badge full-time">
                                    Remoto
                                </p>
                                <br />
                            }
                            <p class="badge">@jobOpportunity.Category.Name</p>
                            <p>Visitas | @jobOpportunity.ViewCount</p>
                            <p>
                                <span class="text-success">
                                    <i class="fa fa-lg fa-thumbs-o-up"></i>
                                    @(jobOpportunity.Likes.FormatThousand())
                                </span>
                            </p>
                        </div>
                    </div>
                </a>
                @{
                    //var currentUser = User.Identity.GetUserId();
                    // var hideAdminOptions = currentUser != null && jobOpportunity.UserProfile?.UserId == currentUser
                    //? "" : "visibility:hidden";
                    var hideAdminOptions = true;
                }

                <div style="@hideAdminOptions" class="switch" data-href="@Url.Action("ToggleHide", "Jobs" )" data-title="@jobId">
                    @if (jobOpportunity.IsHidden)
                    {
                        <input class="cmn-toggle cmn-toggle-yes-no" type="checkbox" checked>
                    }
                    else
                    {
                        <input class="cmn-toggle cmn-toggle-yes-no" type="checkbox">
                    }
                    <label data-on="Mostrar" data-off="Ocultar"></label>
                </div>
                <a style="@hideAdminOptions" href="@Url.Action(" Edit", "Jobs" , new {title=jobId})" class="admin-btn edit-btn">Editar</a>
                <a style="@hideAdminOptions" data-href="@Url.Action(" Delete", "Jobs" , new {title=jobId})"
                   class="admin-btn delete-btn" data-toggle="modal" data-target="#confirm-delete" data-title="@jobOpportunity.Title">Borrar</a>
            </div>
        }
    </div>
    @Html.Partial("_ConfirmDeleteModal")


}



